public class Stack {
    public class Stack {
    private List<Integer> stackList;

    public Stack() {
        stackList = new List<Integer>();
    }

    // Push: Add an object to the top of the stack
    public void push(Integer item) {
        stackList.add(item);
    }

    // Pop: Remove and return the object at the top of the stack
    public Integer pop() {
        if (isEmpty()) {
            return null; // Stack is empty
        }
        return stackList.remove(stackList.size() - 1);
    }

    // Peek: Return the object at the top of the stack without removing it
    public Integer peek() {
        if (isEmpty()) {
            return null; // Stack is empty
        }
        return stackList.get(stackList.size() - 1);
    }

    // Size: Return the number of objects in the stack
    public Integer size() {
        return stackList.size();
    }

    // IsEmpty: Return true if the stack is empty, false if not
    public Boolean isEmpty() {
        return stackList.isEmpty();
    }
}

}